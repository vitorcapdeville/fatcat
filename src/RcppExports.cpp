// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// algoritmo_logit
List algoritmo_logit(arma::mat y, int nit, arma::cube beta, arma::mat sigma2, arma::cube f, arma::mat alfa, double sdpropbeta, double sdpropbeta2, double sdpropf, double sdpropsigma2, int n, int p, int j, bool display_progress);
RcppExport SEXP _fatcat_algoritmo_logit(SEXP ySEXP, SEXP nitSEXP, SEXP betaSEXP, SEXP sigma2SEXP, SEXP fSEXP, SEXP alfaSEXP, SEXP sdpropbetaSEXP, SEXP sdpropbeta2SEXP, SEXP sdpropfSEXP, SEXP sdpropsigma2SEXP, SEXP nSEXP, SEXP pSEXP, SEXP jSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type nit(nitSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type f(fSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropbeta(sdpropbetaSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropbeta2(sdpropbeta2SEXP);
    Rcpp::traits::input_parameter< double >::type sdpropf(sdpropfSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropsigma2(sdpropsigma2SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(algoritmo_logit(y, nit, beta, sigma2, f, alfa, sdpropbeta, sdpropbeta2, sdpropf, sdpropsigma2, n, p, j, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// algoritmo_probit
List algoritmo_probit(arma::mat y, int nit, arma::cube beta, arma::mat sigma2, arma::cube f, arma::mat alfa, double sdpropbeta, double sdpropbeta2, double sdpropf, double sdpropsigma2, int n, int p, int j, bool display_progress);
RcppExport SEXP _fatcat_algoritmo_probit(SEXP ySEXP, SEXP nitSEXP, SEXP betaSEXP, SEXP sigma2SEXP, SEXP fSEXP, SEXP alfaSEXP, SEXP sdpropbetaSEXP, SEXP sdpropbeta2SEXP, SEXP sdpropfSEXP, SEXP sdpropsigma2SEXP, SEXP nSEXP, SEXP pSEXP, SEXP jSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type nit(nitSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type f(fSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropbeta(sdpropbetaSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropbeta2(sdpropbeta2SEXP);
    Rcpp::traits::input_parameter< double >::type sdpropf(sdpropfSEXP);
    Rcpp::traits::input_parameter< double >::type sdpropsigma2(sdpropsigma2SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(algoritmo_probit(y, nit, beta, sigma2, f, alfa, sdpropbeta, sdpropbeta2, sdpropf, sdpropsigma2, n, p, j, display_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fatcat_algoritmo_logit", (DL_FUNC) &_fatcat_algoritmo_logit, 14},
    {"_fatcat_algoritmo_probit", (DL_FUNC) &_fatcat_algoritmo_probit, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_fatcat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
